/*Подвиг 5. Продолжите программу. Объявите функцию с именем set_tag и следующими параметрами (порядок важен):

строка, которая заключается в тег (тип char*, эта строка будет меняться в функции);
максимальная длина строки (целое число);
тег (строка), в который заключается переданная строка, с начальным значением "h1".
(Все строки в параметрах функции должны быть представлены массивами символов.)

Например, при передаче в функцию set_tag строки "Hello C++", заключаем ее (по умолчанию) в тег "h1". В результате, переданная строка после обработки должна иметь вид:

"<h1>Hello C++</h1>"

То есть, сначала прописывается открывающийся тег <h1>, а в конце строки - закрывающийся </h1>. И так для любых указанных тегов. При этом функция set_tag ничего не должна возвращать, только менять переданную строку, не выходя за пределы ее максимальной длины.

В функции main первый раз вызовите функцию set_tag только со строкой title, а второй раз - со строкой title (исходной) и tag. Полученные строки выведите в консоль каждую с новой строки. В начале и конце строк не должно быть пробелов.

Тесты: https://github.com/selfedu-rus/c-tests/tree/main/9.14.5

Sample Input:

I love C
div
Sample Output:

<h1>I love C</h1>
<div>I love C</div>
*/
#include <iostream>
#include <string.h>

void set_tag(const char *s, int n, const char t[] = "h1")
{
    char buf[100];
    if (strlen(s) + 2 * strlen(t) + 5 < n)
    {
        sprintf(buf, "<%s>%s</%s>", t, s, t);
        strcpy((char *)s, buf);
    }
    return;
}

int main()
{
    std::string title, tag;

    getline(std::cin, title);
    getline(std::cin, tag);

    // здесь продолжайте функцию main
    char x[100], y[100];

    strcpy(x, title.c_str());
    set_tag(x, 100);
    std::cout << x << std::endl;

    strcpy(x, title.c_str());
    strcpy(y, tag.c_str());
    set_tag(x, 100, y);
    std::cout << x << std::endl;

    return 0;
}