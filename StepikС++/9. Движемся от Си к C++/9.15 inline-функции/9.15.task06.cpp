/*Подвиг 6 (на повторение). Продолжите программу. В функции main из стандартного входного потока читаются целые числа. Необходимо все их сохранять в массиве marks (не более 20). То есть, чисел может быть и больше 20, но сохранять только первые 20 в порядке их считывания. 

Допишите функцию sum_ar, которая бы вычисляла сумму чисел переданного ей массива ar. Складывать следует только те числа, для которых переданная функция (через указатель) возвращает истину (не нулевое значение). Полученная сумма должна возвращаться функцией sum_ar. Указатель должен принимать функции с сигнатурой:

bool <имя функции>(int);
В функции main вызовите функцию sum_ar для массива marks, складывая только четные числа (проверка на четность выполняется дополнительной, вспомогательной функцией, которая, затем, передается последним аргументом в функцию sum_ar). Выведите в консоль целое значение, которое вернула функция sum_ar.

Sample Input:

1 2 3 4 5 6 -5 -4 -3 10 3 2 5
Sample Output:

20
*/
#include <iostream>

enum {max_size = 20};
using PTR_FILTER = bool (*)(int);

int sum_ar(const int *ar, size_t len_ar, PTR_FILTER filter)
{
    int sum = 0;
    for (size_t i = 0; i < len_ar; i++)
        if (filter(ar[i])) sum += ar[i];
    return sum;
}

bool is_even(int x)
{
    return x % 2 == 0;
}

int main(void)
{
    int marks[max_size] = {0};
    int count = 0;
    while(count < max_size && std::cin >> marks[count]) count++;
    std::cout << sum_ar(marks, max_size, is_even) << std::endl;
    return 0;
}