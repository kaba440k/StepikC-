/*–ü–æ–¥–≤–∏–≥ 5. –û–±—ä—è–≤–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –∏–º–µ–Ω–µ–º (—Ç–∏–ø–æ–º) point3D —Ç–∞–∫, —á—Ç–æ–±—ã –µ–µ –æ–±—ä–µ–∫—Ç—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

point3D pt_null;
point3D pt_end(8, -5, 11);
–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –≤ —Ç—Ä–µ—Ö–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö (int) –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, x, y, z. –ï—Å–ª–∏ –Ω–∏–∫–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è, —Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ x, y, z –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.

–û–±—ä—è–≤–∏—Ç–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ point3D —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã:

void get_coords(int& x, int& y, int& z): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö x, y, z.
–û–±—ä—è–≤–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –µ—â–µ –æ–¥–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –∏–º–µ–Ω–µ–º (—Ç–∏–ø–æ–º) line3D —Ç–∞–∫, —á—Ç–æ–±—ã –µ–µ –æ–±—ä–µ–∫—Ç—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å, —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

line3D line(point3D(0, 1, 2), point3D(10, 43, -21));
–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ line3D –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä point3D, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, start_pt, end_pt. –ê –≤ –º–æ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å—Ç—Ä–æ–∫—É (–≤ –∫–æ–Ω—Ü–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É '\n'):

"Deleted line: (x0, y0, z0) (x1, y1, z1)"

–≥–¥–µ (x0, y0, z0) - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞—á–∞–ª–∞; (x1, y1, z1) - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–Ω—Ü–∞ –ª–∏–Ω–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ line –¥–æ–ª–∂–Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å—Ç—Ä–æ–∫–∞:

"Deleted line: (0, 1, 2) (10, 43, -21)"

–û–±—ä—è–≤–∏—Ç–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ line3D —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã:

double length(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É –ª–∏–Ω–∏–∏; –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: ùêø = sqrt((x0-x1)^2+(y0-y1)^2+(z0-z1)^2)
const point3D& get_coords_start(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é start_pt;
const point3D& get_coords_end(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é end_pt.

–í —Ñ—É–Ω–∫—Ü–∏–∏ main —Å–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç line —Ç–∏–ø–∞ line3D —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏:

start_pt = (-5, 100, 45), end_pt = (0, 32, -42)

P. S. –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.
*/

#include <iostream>
#include <math.h>

// –∑–¥–µ—Å—å –æ–±—ä—è–≤–ª—è–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
struct point3D{
private:
    int x,y,z;
public:
    point3D(int x = 0, int y = 0, int z = 0){
        this->x = x;
        this->y = y;
        this->z = z;
    }
    
    void get_coords(int& x, int& y, int& z){
        x = this->x;
        y = this->y;
        z = this->z;
    }
};

struct line3D{
private:
    point3D points[2];
public:
    line3D(point3D start_pt, point3D end_pt){
        points[0] = start_pt;
        points[1] = end_pt;
    }
    ~line3D(){
        int x1,y1,z1,x2,y2,z2;
        points[0].get_coords(x1,y1,z1);
        points[1].get_coords(x2,y2,z2);
        std::cout << "Deleted line: ("<<x1<<", "<<y1<<", "<<z1<<") ("<<x2<<", "<<y2<<", "<<z2<<")";
    }
    double length(){
        int x1,y1,z1,x2,y2,z2;
        points[0].get_coords(x1,y1,z1);
        points[1].get_coords(x2,y2,z2);
        return sqrt(pow(x1-x2, 2) + pow(y1-y2, 2) + pow(z1-z2, 2));
    }

    const point3D& get_coords_start(){
        return points[0];
    }

    const point3D& get_coords_end(){
        return points[1];
    }
};

int main(void)
{   
    point3D start_pt(-5, 100, 45);
    point3D end_pt(0, 32, -42);
    line3D line(start_pt, end_pt);
}