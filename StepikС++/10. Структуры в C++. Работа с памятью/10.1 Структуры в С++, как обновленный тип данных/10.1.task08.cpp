/*Подвиг 8 (на повторение). Объявите в программе структуру с идентификатором tag_point_3d и полями x, y, z типа int (координаты точки в трехмерном пространстве). В функции main объявите массив points структуры tag_point_3d размером total_points. Константа total_points должна быть объявлена через перечисление и равна 100. Из входного потока (в функции main) читайте целые числа (записанные в одну строчку через пробел) и последовательно записывайте в массив points. То есть, первый элемент массива points будет содержать первые три числа из входного потока, второй элемент points - следующие три числа, и так далее. Если на каком-либо этапе читается меньше трех чисел, то считывание завершается и неполные данные (менее трех чисел) в очередной элемент массива points не заносятся. В переменной total должно содержаться общее число корректно сформированных элементов массива points. Выведите в консоль в одну строчку через пробел значения координат x, y, z первого элемента массива points, в который производилась запись.

Тесты: https://github.com/selfedu-rus/c-tests/tree/main/10.1.8

Sample Input:

1 2 3 3 4 5 7 8 9
Sample Output:

1 2 3
*/

#include <iostream>

enum { total_points = 100 };
struct tag_point_3d {
    int x, y, z;
};

int main(void)
{
    tag_point_3d points[total_points];
    tag_point_3d p;
    size_t total = 0;
    while (total < total_points && scanf("%d%d%d", &p.x, &p.y, &p.z) == 3) {
        points[total] = p;
        total++;
    }

    printf("%d %d %d", points[0].x, points[0].y, points[0].z);
}